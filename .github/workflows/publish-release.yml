name: Publish release
run-name: "Published release: ${{ inputs.release }}, by ${{ github.actor }}, #${{ github.run_number }}" 

on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Tag to publish (e.g. tags/release/2.0.1)'
        required: true
        default: latest

      updateLatestSymlink:
        description: 'Update "latest" symlink'
        required: true
        type: boolean
        default: true

      dry-run:
        description: 'Dry-run mode'
        required: true
        type: boolean
        default: false

      publish-docs:
        description: "Publish static documentation to carrot2.github.io"
        type: boolean
        default: true 

env:
  RELEASE_ARTIFACTS_DIR: './release'
  DRY_RUN: "${{ inputs.dry-run == true && '--dry-run' || '' }}"

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment: production

    steps:
      - name: Download release artifacts
        uses: carrotsearch/infra-public/.github/actions/download-release-artifacts@master
        with:
          release: ${{ inputs.release }}
          dir: ${{ env.RELEASE_ARTIFACTS_DIR }}
          pattern: "^.*$"

      - name: Extract metadata from build.properties
        id: build-properties
        run: |
          cat ${{ env.RELEASE_ARTIFACTS_DIR }}/build.properties
          PRODUCT_VERSION=`cat ${{ env.RELEASE_ARTIFACTS_DIR }}/build.properties | grep "product\.version" | cut -d= -f2`
          echo "PRODUCT_VERSION=${PRODUCT_VERSION}" >> "$GITHUB_OUTPUT"

      - uses: actions/checkout@v4
        if: ${{ inputs.publish-docs }}
        with:
          repository: carrot2/carrot2.github.io.git
          ref: 'master'
          path: carrot2.github.io
          token:  ${{ secrets.GH_ACCESS_TOKEN_CARROT2_GITHUB_IO }}

      - name: Publish static documentation
        if: ${{ inputs.publish-docs }}
        run: |
          pushd ${{ env.RELEASE_ARTIFACTS_DIR }}
          unzip -q carrot2-${{steps.build-properties.outputs.PRODUCT_VERSION}}.zip
          popd
          
      - name: Add and commit a new version to secure.carrotsearch.com
        if: ${{ inputs.publish-docs == true }}
        run: |
          RELEASE_DIR=`realpath ${{ env.RELEASE_ARTIFACTS_DIR }}/carrot2-${{steps.build-properties.outputs.PRODUCT_VERSION}}`
          pushd carrot2.github.io
          git config --global user.email "gh-action@carrotsearch.com"
          git config --global user.name "Carrot2 publishing workflow (gh action)"

          rm -rf release/${{steps.build-properties.outputs.PRODUCT_VERSION}}/
          mkdir  release/${{steps.build-properties.outputs.PRODUCT_VERSION}}/

          cp -R $RELEASE_DIR/dcs/web/doc     release/${{steps.build-properties.outputs.PRODUCT_VERSION}}/
          cp -R $RELEASE_DIR/dcs/web/javadoc release/${{steps.build-properties.outputs.PRODUCT_VERSION}}/

          cat >> /tmp/index.html << EOF
            <!DOCTYPE html>
            <html>
              <head>
              	<meta charset="UTF-8">
                <meta http-equiv="refresh" content="0; URL=../${{steps.build-properties.outputs.PRODUCT_VERSION}}/doc/">
              </head>

              <body>
                Redirecting to the latest Carrot2 release documentation.
              </body>
            </html>
          EOF

          if "${{ inputs.updateLatestSymlink }}"; then
            mv /tmp/index.html release/latest/index.html
            git diff release/latest/index.html
          fi

          git add -A .
          git commit -am "Carrot2 ${{steps.build-properties.outputs.PRODUCT_VERSION}} (gh publishing action)"

          if "${{ inputs.dry-run == false }}"; then
            git push
          fi

